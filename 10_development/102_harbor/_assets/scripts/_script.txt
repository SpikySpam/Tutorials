Harbor is an open-source container image registry and management tool for Docker, Kubernetes, and other container orchestration platforms. In this video, I will show you the code I've added to the sources at my github page, to make the Harbor container to work. Let's go!

First, I've defined a version environment variable, in our versions script, for the Harbor Docker images, at Docker Hub.

Second, I've defined the internal, and external port numbers of my docker container.

Then, I've defined some environment variables in our secrets script. It's in my gitignore file. It contains passwords and keys.

In a typical Harbor deployment using Docker Compose, you'll find several services, each serving a specific purpose. Here's a summary of what each service does:

The registry service is the core of Harbor and serves as the container image registry. It stores and manages Docker images, making them available for distribution and deployment. This is where your container images are stored and can be pushed, pulled, and managed.

registryctl is a service that handles the management and configuration of the Harbor registry. It provides a command-line interface and an API for performing administrative tasks such as user management, project configuration, and system settings.

The portal service provides a web-based user interface for Harbor. It allows users to interact with Harbor through a graphical interface, making it easier to manage container images, projects, and users. Users can browse, search for images, and perform other administrative tasks through this interface.

The job service is responsible for handling asynchronous tasks and background jobs within Harbor. These jobs can include tasks like scanning container images for vulnerabilities. Garbage collection, and other maintenance activities that don't need to be performed in real-time. The jobservice ensures these tasks are executed efficiently.

These services work together to help you manage and secure your container images effectively. Later we will push all necessary images to our own, self-hosted Registry provider.

You can simply execute the recreate script to build the containers. But keep in mind that this script also deletes the mounted persistent volume folder on your local computer.